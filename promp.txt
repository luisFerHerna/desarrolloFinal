Historial del paciente: 
(2) [{…}, {…}]
doctor.js:284 Historial médico (recetas): 
[]
doctor.js:322 Error al cargar historial: TypeError: Cannot set properties of null (setting 'innerHTML')
    at doctor.js:288:28
(anonymous)	@	doctor.js:322
Promise.catch		
cargarHistorialMedico	@	doctor.js:321
(anonymous)	@	doctor.js:31
(anonymous)	@	doctor.js:442
Promise.then		
verHistorial	@	doctor.js:434
(anonymous)	@	doctor.js:163


No se pudo cargar el historial médico.

doctor.js
document.addEventListener('DOMContentLoaded', function () {
    const user = JSON.parse(localStorage.getItem('user'));
    if (!user || user.rol !== 'doctor') {
        window.location.href = 'login.html';
    }

    // Variables globales
    let pacientes = [];
    let medicamentos = [];

    // Manejo de tabs
    document.querySelectorAll('.tab-btn').forEach((btn) => {
        btn.addEventListener('click', function () {
            document.querySelectorAll('.tab-btn').forEach((b) =>
                b.classList.remove('active')
            );
            document.querySelectorAll('.tab-content').forEach((c) =>
                c.classList.remove('active')
            );

            this.classList.add('active');
            document.getElementById(this.dataset.tab).classList.add('active');

            // Cargar datos según la pestaña
            if (this.dataset.tab === 'pacientes') {
                cargarPacientes();
            } else if (this.dataset.tab === 'recetas') {
                cargarPacientesParaReceta();
                cargarMedicamentos();
            } else if (this.dataset.tab === 'historial') {
                cargarHistorialMedico();
                // Limpiar mensaje al entrar
                document.getElementById('mensajeHistorial').textContent = '';
            }
        });
    });

    // Logout
    document.getElementById('logoutBtn').addEventListener('click', function () {
        localStorage.removeItem('user');
        localStorage.removeItem('jwt');
        window.location.href = 'login.html';
    });

    // Búsqueda de pacientes
    document
        .getElementById('searchBtn')
        .addEventListener('click', buscarPacientes);
    document
        .getElementById('searchPaciente')
        .addEventListener('keyup', function (e) {
            if (e.key === 'Enter') buscarPacientes();
        });

    // Búsqueda de historial
    document
        .getElementById('searchHistorialBtn')
        .addEventListener('click', buscarHistorial);
    document
        .getElementById('searchHistorial')
        .addEventListener('keyup', function (e) {
            if (e.key === 'Enter') buscarHistorial();
        });

    // Añadir medicamento a receta
    document
        .getElementById('addMedicamentoBtn')
        .addEventListener('click', agregarMedicamento);

    // Formulario de receta
    document
        .getElementById('recetaForm')
        .addEventListener('submit', function (e) {
            e.preventDefault();
            generarReceta();
        });

    // Cargar datos iniciales
    cargarPacientes();
    cargarMedicamentos();
});

// Función para cargar pacientes
function cargarPacientes() {
    const jwt = localStorage.getItem('jwt');

    fetch('http://localhost:8000/backend/api/pacientes.php', {
        headers: {
            Authorization: `Bearer ${jwt}`,
        },
    })
        .then((response) => {
            if (!response.ok) throw new Error('Error al cargar pacientes');
            return response.json();
        })
        .then((data) => {
            pacientes = data;
            renderPacientes(data);
        })
        .catch((error) => {
            console.error('Error:', error);
            alert('Error al cargar pacientes');
        });
}

// Función para buscar pacientes
function buscarPacientes() {
    const searchTerm = document
        .getElementById('searchPaciente')
        .value.toLowerCase();
    const filtered = pacientes.filter(
        (paciente) =>
            paciente.nombre.toLowerCase().includes(searchTerm) ||
            paciente.email.toLowerCase().includes(searchTerm)
    );
    renderPacientes(filtered);
}

// Función para renderizar pacientes
function renderPacientes(pacientes) {
    const pacientesList = document.getElementById('pacientesList');
    pacientesList.innerHTML = '';

    if (pacientes.length === 0) {
        pacientesList.innerHTML = '<p>No se encontraron pacientes</p>';
        return;
    }

    const table = document.createElement('table');
    table.innerHTML = `
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Email</th>
                <th>Teléfono</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody></tbody>
    `;

    const tbody = table.querySelector('tbody');

    pacientes.forEach((paciente) => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${paciente.nombre}</td>
            <td>${paciente.email}</td>
            <td>${paciente.telefono}</td>
            <td>
                <button class="view-btn" data-id="${paciente.id}">Ver Historial</button>
                <button class="receta-btn" data-id="${paciente.id}">Generar Receta</button>
            </td>
        `;
        tbody.appendChild(row);
    });

    pacientesList.appendChild(table);

    // Eventos para botones
    document.querySelectorAll('.view-btn').forEach((btn) => {
        btn.addEventListener('click', function () {
            verHistorial(this.dataset.id);
        });
    });

    document.querySelectorAll('.receta-btn').forEach((btn) => {
        btn.addEventListener('click', function () {
            generarRecetaParaPaciente(this.dataset.id);
        });
    });
}

// Función para cargar pacientes en el select de recetas
function cargarPacientesParaReceta() {
    const select = document.getElementById('pacienteSelect');
    select.innerHTML = '<option value="">Seleccione un paciente</option>';

    pacientes.forEach((paciente) => {
        const option = document.createElement('option');
        option.value = paciente.id;
        option.textContent = `${paciente.nombre} (${paciente.email})`;
        select.appendChild(option);
    });
}

// Función para cargar medicamentos
function cargarMedicamentos() {
    fetch('http://localhost:8000/backend/api/medicamentos.php')
        .then((response) => response.json())
        .then((data) => {
            medicamentos = data;
        })
        .catch((error) => {
            console.error('Error:', error);
        });
}

// Función para agregar medicamento a receta
function agregarMedicamento() {
    const container = document.getElementById('medicamentosContainer');
    const div = document.createElement('div');
    div.className = 'medicamento-item';
    div.innerHTML = `
        <select class="medicamento-select" required>
            <option value="">Seleccione medicamento</option>
            ${medicamentos
                .map(
                    (m) =>
                        `<option value="${m.id}">${m.nombre} (${m.cantidad} disponibles)</option>`
                )
                .join('')}
        </select>
        <input type="number" class="medicamento-cantidad" min="1" value="1" required />
        <textarea class="medicamento-instrucciones" placeholder="Instrucciones específicas"></textarea>
        <button type="button" class="remove-medicamento-btn">Eliminar</button>
    `;
    container.appendChild(div);

    div.querySelector('.remove-medicamento-btn').addEventListener('click', function () {
        container.removeChild(div);
    });
}

// Función para generar receta
function generarReceta() {
    const jwt = localStorage.getItem('jwt');
    const pacienteId = document.getElementById('pacienteSelect').value;
    const diagnostico = document.getElementById('diagnostico').value;
    const instrucciones = document.getElementById('instrucciones').value;

    const medicamentosData = [];
    document.querySelectorAll('.medicamento-item').forEach((item) => {
        medicamentosData.push({
            medicamento_id: item.querySelector('.medicamento-select').value,
            cantidad: item.querySelector('.medicamento-cantidad').value,
            instrucciones: item.querySelector('.medicamento-instrucciones').value,
        });
    });

    const recetaData = {
        paciente_id: pacienteId,
        doctor_id: JSON.parse(localStorage.getItem('user')).id,
        diagnostico: diagnostico,
        instrucciones: instrucciones,
        medicamentos: medicamentosData,
    };

    fetch('http://localhost:8000/backend/api/recetas.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${jwt}`,
        },
        body: JSON.stringify(recetaData),
    })
        .then((response) => response.json())
        .then((data) => {
            if (data.error) {
                alert(data.error);
            } else {
                alert('Receta generada exitosamente');
                document.getElementById('recetaForm').reset();
                document.getElementById('medicamentosContainer').innerHTML = '';
                cargarHistorialMedico();
            }
        })
        .catch((error) => {
            console.error('Error:', error);
            alert('Error al generar receta');
        });
}

// Función para cargar historial médico
function cargarHistorialMedico(pacienteId) {
  fetch(`http://localhost:8000/backend/api/recetas.php?paciente_id=${pacienteId}`)
    .then(response => {
      if (!response.ok) {
        throw new Error(`Error HTTP: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log("Historial médico (recetas):", data);

      // Aquí muestras el historial en el DOM, por ejemplo:
      const contenedor = document.getElementById('historial-container');
      contenedor.innerHTML = '';

      if (data.length === 0) {
        contenedor.textContent = 'No hay recetas para este paciente.';
        return;
      }

      data.forEach(receta => {
        const div = document.createElement('div');
        div.classList.add('receta');

        div.innerHTML = `
          <h3>Receta ID: ${receta.id}</h3>
          <p><strong>Fecha:</strong> ${receta.fecha}</p>
          <p><strong>Diagnóstico:</strong> ${receta.diagnostico}</p>
          <p><strong>Instrucciones:</strong> ${receta.instrucciones}</p>
          <p><strong>Medicamentos:</strong></p>
          <ul>
            ${receta.medicamentos && receta.medicamentos.length > 0
              ? receta.medicamentos.map(med => `
                <li>
                  ID: ${med.medicamento_id}, Cantidad: ${med.cantidad}, Instrucciones: ${med.instrucciones || 'Ninguna'}
                </li>
              `).join('')
              : '<li>No hay medicamentos registrados.</li>'
            }
          </ul>
        `;

        contenedor.appendChild(div);
      });

    })
    .catch(error => {
      console.error('Error al cargar historial:', error);
      alert('No se pudo cargar el historial médico.');
    });
}


// Función para buscar en historial (puedes mejorar esta función)
function buscarHistorial() {
    const searchTerm = document.getElementById('searchHistorial').value.toLowerCase();

    // Por simplicidad, recargar todo y filtrar localmente
    const jwt = localStorage.getItem('jwt');

    fetch('http://localhost:8000/backend/api/historial.php', {
        headers: {
            Authorization: `Bearer ${jwt}`,
        },
    })
        .then((response) => response.json())
        .then((data) => {
            const filtered = data.filter(
                (item) =>
                    item.paciente_nombre.toLowerCase().includes(searchTerm) ||
                    item.diagnostico.toLowerCase().includes(searchTerm)
            );
            renderHistorial(filtered);
        })
        .catch((error) => {
            console.error('Error:', error);
        });
}

// Función para renderizar historial
function renderHistorial(historial) {
    const historialList = document.getElementById('historialList');
    historialList.innerHTML = '';

    if (historial.length === 0) {
        historialList.innerHTML = '<p>No se encontraron registros</p>';
        return;
    }

    const table = document.createElement('table');
    table.innerHTML = `
        <thead>
            <tr>
                <th>Fecha</th>
                <th>Paciente</th>
                <th>Diagnóstico</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody></tbody>
    `;

    const tbody = table.querySelector('tbody');

    historial.forEach((item) => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${new Date(item.fecha).toLocaleDateString()}</td>
            <td>${item.paciente_nombre}</td>
            <td>${item.diagnostico}</td>
            <td>
                <button class="view-receta-btn" data-id="${item.id}">Ver Receta</button>
            </td>
        `;
        tbody.appendChild(row);
    });

    historialList.appendChild(table);

    // Eventos para botones
    document.querySelectorAll('.view-receta-btn').forEach((btn) => {
        btn.addEventListener('click', function () {
            verRecetaCompleta(this.dataset.id);
        });
    });
}

// Función para ver receta completa (puedes implementar la vista detallada)
function verRecetaCompleta(recetaId) {
    alert('Funcionalidad de ver receta completa no implementada aún.');
}

// Función para generar receta para paciente específico
function generarRecetaParaPaciente(pacienteId) {
    // Cambiar a pestaña de recetas
    document.querySelector('.tab-btn[data-tab="recetas"]').click();

    // Seleccionar paciente
    const select = document.getElementById('pacienteSelect');
    select.value = pacienteId;

    // Enfocar en diagnóstico
    document.getElementById('diagnostico').focus();
}

// Función para ver historial y mostrar mensaje en la página
function verHistorial(pacienteId) {
    const jwt = localStorage.getItem('jwt');
    const mensajeDiv = document.getElementById('mensajeHistorial');

    fetch(`http://localhost:8000/backend/api/recetas.php?paciente_id=${pacienteId}`, {
        headers: {
            Authorization: `Bearer ${jwt}`,
        },
    })
        .then((response) => {
            if (!response.ok) throw new Error('Error al cargar historial');
            return response.json();
        })
        .then((data) => {
            // Muestra el mensaje en la página (no alerta)
            mensajeDiv.textContent = `Se encontraron ${data.length} receta(s) para el paciente ID ${pacienteId}. Revisa la consola para más detalles.`;

            // También lo logueamos en consola
            console.log('Historial del paciente:', data);

            // Cambiar a la pestaña de historial para que el mensaje sea visible
            document.querySelector('.tab-btn[data-tab="historial"]').click();

            // Puedes agregar aquí código para mostrar ese historial detallado si quieres
        })
        .catch((error) => {
            console.error('Error al cargar historial:', error);
            mensajeDiv.textContent = 'No se pudo cargar el historial del paciente.';
        });
}


doctor.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Panel del Doctor</title>
    <link rel="stylesheet" href="css/styles.css" />
    <style>
      #mensajeHistorial {
          margin: 10px 0;
          padding: 10px;
          background-color: #d1ecf1;
          border: 1px solid #bee5eb;
          color: #0c5460;
          border-radius: 4px;
          font-weight: 600;
      }

      .receta {
          border: 1px solid #ccc;
          padding: 10px;
          margin: 10px 0;
          border-radius: 5px;
          background-color: #f9f9f9;
      }

      .receta h3 {
          margin-top: 0;
      }
    </style>
</head>
<body>
    <header>
        <h1>Panel del Doctor</h1>
        <button id="logoutBtn">Cerrar Sesión</button>
    </header>

    <div class="tabs">
        <button class="tab-btn active" data-tab="pacientes">Pacientes</button>
        <button class="tab-btn" data-tab="recetas">Generar Receta</button>
        <button class="tab-btn" data-tab="historial">Historial Médico</button>
    </div>

    <div class="tab-content active" id="pacientes">
        <h2>Lista de Pacientes</h2>
        <div class="search-box">
            <input type="text" id="searchPaciente" placeholder="Buscar paciente..." />
            <button id="searchBtn">Buscar</button>
        </div>
        <div id="pacientesList"></div>
    </div>

    <div class="tab-content" id="recetas">
        <h2>Generar Nueva Receta</h2>
        <form id="recetaForm">
            <div class="form-group">
                <label for="pacienteSelect">Paciente:</label>
                <select id="pacienteSelect" required></select>
            </div>
            <div class="form-group">
                <label for="diagnostico">Diagnóstico:</label>
                <textarea id="diagnostico" required></textarea>
            </div>
            <div class="form-group">
                <label for="medicamentos">Medicamentos:</label>
                <div id="medicamentosContainer"></div>
                <button type="button" id="addMedicamentoBtn">Añadir Medicamento</button>
            </div>
            <div class="form-group">
                <label for="instrucciones">Instrucciones:</label>
                <textarea id="instrucciones" required></textarea>
            </div>
            <button type="submit">Generar Receta</button>
        </form>
    </div>

    <div class="tab-content" id="historial">
        <h2>Historial Médico</h2>
        <div class="search-box">
            <input type="text" id="searchHistorial" placeholder="ID del paciente..." />
            <button id="searchHistorialBtn">Buscar</button>
        </div>

        <div id="mensajeHistorial"></div>
        <div id="historialList"></div>
    </div>

    <script src="js/doctor.js"></script>
</body>
</html>